# Sort:

generate-buffer 0 10 /columns=2 /samples=11
set-row-names a b c d 
set-column-names my_x my_y

# First, a no-op
sort 
assert '$col_names[0]=="my_x"'
assert '$col_names[1]=="my_y"'

assert '$row_names[0]=="a"'
assert '$row_names[1]=="b"'
assert '$row_names[2]=="c"'
assert '$row_names[3]=="d"'
assert '$row_names[4]==""'

# Then, change the columns
apply-formula x=-x
assert '$col_names[0]=="my_x"'
assert '$col_names[1]=="my_y"'

assert '$row_names[0]=="a"'
assert '$row_names[1]=="b"'
assert '$row_names[2]=="c"'
assert '$row_names[3]=="d"'
assert '$row_names[4]==""'

# Sort again, now all should be reversed:
sort
assert '$col_names[0]=="my_x"'
assert '$col_names[1]=="my_y"'

assert '$row_names[10]=="a"'
assert '$row_names[9]=="b"'
assert '$row_names[8]=="c"'
assert '$row_names[7]=="d"'
assert '$row_names[6]==""'

# Reverse
generate-buffer 0 10 /columns=2 /samples=11
set-row-names a b c d 
set-column-names my_x my_y

reverse
assert '$row_names[10]=="a"'
assert '$row_names[9]=="b"'
assert '$row_names[8]=="c"'
assert '$row_names[7]=="d"'
assert '$row_names[6]==""'


# Strip-if
generate-buffer 0 10 /columns=2 /samples=11
set-row-names a b c d 
set-column-names my_x my_y

strip-if 'x==0'
assert '$col_names[0]=="my_x"'
assert '$col_names[1]=="my_y"'

assert '$row_names[0]=="b"'
assert '$row_names[1]=="c"'
assert '$row_names[2]=="d"'
assert '$row_names[3]==""'


# Tweak-columns
generate-buffer 0 10 /columns=4 /samples=11
set-column-names my_x my_y my_y2 my_y3
tweak-columns /remove=y2
assert '$col_names[2]=="my_y3"'

generate-buffer 0 10 /columns=4 /samples=11
set-column-names my_x my_y my_y2 my_y3
tweak-columns /flip=true
assert '$col_names[0]=="my_x"'
assert '$col_names[3]=="my_y"'
assert '$col_names[2]=="my_y2"'
assert '$col_names[1]=="my_y3"'

generate-buffer 0 10 /columns=4 /samples=11
set-column-names my_x my_y my_y2 my_y3
tweak-columns /flip-all=true
assert '$col_names[3]=="my_x"'
assert '$col_names[2]=="my_y"'
assert '$col_names[1]=="my_y2"'
assert '$col_names[0]=="my_y3"'

generate-buffer 0 10 /columns=4 /samples=11
set-column-names my_x my_y my_y2 my_y3
tweak-columns /select=y2,x,y3
assert '$col_names[1]=="my_x"'
assert '$col_names[0]=="my_y2"'
assert '$col_names[2]=="my_y3"'

generate-buffer 0 10 /columns=4 /samples=11
set-column-names my_x my_y my_y2 my_y3
tweak-columns /select=named:my_y2,$c.my_x
assert '$col_names[0]=="my_y2"'
assert '$col_names[1]=="my_x"'


# the /mode=add-column operation
generate-buffer 0 10 /columns=4 /samples=11
set-column-names my_x my_y my_y2 my_y3
apply-formula /mode=add-column x /name=new_name
assert '$col_names[0]=="my_x"'
assert '$col_names[1]=="my_y"'
assert '$col_names[2]=="my_y2"'
assert '$col_names[3]=="my_y3"'
assert '$col_names[4]=="new_name"'


# Test the /use-names option
generate-buffer 0 10 /columns=4 /samples=11
set-column-names my_x my_y my_y2 my_y3
apply-formula /use-names=true my_y3=2
assert $stats.y3_average-2 0
