# Checks the parsing and use of formulas in parameters
generate-buffer 0 10
generate-buffer 0 10


define-derived-fit /mode=deriv-only polynomial


@ sim-deriv-poly.cmds parameters/poly-4-1.params 1 2 3 -2 0.2 1e-10

# Same with an extra parameter
@ sim-deriv-poly.cmds parameters/poly-4-2.params 2 2 3 -2 0.1 2e-10 0 s

# Two buffers
@ sim-deriv-poly.cmds parameters/poly2-4-1.params 1 2 3 -1 -2 3e-9 0,1

# Same, but with extra parameters
@ sim-deriv-poly.cmds parameters/poly2-4-2.params 2 3 4 -2 -1 2e-9 0,1 s

# One formula
@ sim-deriv-poly.cmds parameters/poly2-4-3.params 2 3 4 -2 0.5 2e-10 0,1 s

define-derived-fit /mode=combined polynomial

@ sim-deriv-combined.cmds parameters/poly-4-1.params 1 2 3 -2 0.2 1e-10


# Testing redifinition of underlying fit...

custom-fit tst-deriv 0.5*a*x**2+b*x
generate-buffer 0 10
sim-tst-deriv parameters/custom-line.params 0
apply-formula y-=x**2+3*x
assert '$stats["y_norm"]' 0

define-derived-fit /mode=deriv-only tst-deriv
sim-deriv-only-tst-deriv parameters/custom-line.params 0
apply-formula y-=2*x+3
assert '$stats["y_norm"]' 4e-11

custom-fit tst-deriv a*x**2+b*x /redefine=true
sim-tst-deriv parameters/custom-line.params 0
apply-formula y-=2*x**2+3*x
assert '$stats["y_norm"]' 0

sim-deriv-only-tst-deriv parameters/custom-line.params 0
apply-formula y-=4*x+3
assert '$stats["y_norm"]' 4e-11


