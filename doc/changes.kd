# What's new in version 3.0 ?

Version 3.0 brings an "expert" fit mode, with a fit command line that
makes it possible to automate fitting or do parameter space
exploration, running many fits with random initial starting positions
to greatly increase the likelihood of finding the best parameters
(along with many other new features for fits).

This release also brings in a command to permanently record
information about a file, such as the conditions in which the
experiments were made (the sample used, the temperature, etc...), in a
format that QSoas automatically reads when reading the file. This
makes it possible to quickly browse through data to find the
experiments you need.

Finally, this release brings in a whole new offline documentation
system, with and index and search facilities, startup tips, and the
possibility to specify manually all the command arguments and options
in a dialog box when running a command from the menus.

See the full list of changes [below](#v3p0)

# What's new in version 2.2 ?

Version 2.2 brings in a lot of new features and improvements, notably
greatly improved memory use for massive multifits, a fit for linear
(in)activation processes, a new way to transform "numbers" like peak
position or stats into new datasets and SVG output ! It also finally
brings back the peak area output in [cmd: find-peaks] and related
commands !

See the full list of changes [below](#v2p2)

# What's new in version 2.1 ?

Version 2.1 brings in a number of new functionalities, such as a
command to solve equations, and ways to reparametrize fits, along with
numerous improvements of already existing commands.

See the full list of changes [below](#v2p1)

# What's new in version 2.0 ?

Version 2.0 brings a whole new set of functionalities for fits, namely
a fit engine with enormous performance increases in massive
multibuffer fits (easy to reach a 1000 times speed increase !),
definition of fits with a distribution of parameters, and many new
functions.

See the full list of changes [below](#v2p0)

# Changes in version 3.0 {#v3p0}

## Fits

The fit system has been greatly improved, with an `/expert=true` mode
featuring: 

 * a command-line interface with over 50 commands in the fit dialog to run
   fits non-interactively
 * parameter space explorers, which run fits systematically with
   different starting parameters, to improve the chance of finding the
   best parameters 
 * possibility to run scripts, even as a `fit-` command-line option,
   which means one can now perform fully automatic scripts
 * the display, handling, reuse of all the previous fit attempts in a fit
   session ("fit trajectories"), including ways to highlight changes
 * the possibility to set the fit dialog title bar
 * a Particle Swarm Optimizer fit engine
 * the GSL implementation of the simplex as fit engine
 * a mode in `sim-` that just writes the residuals
 * a mode in `sim-` to export subfunctions
 * improvements to the parameters spreadsheet

## New commands

 * a [cmd: mem] command to query for memory usage and set the size of
   the load buffer cache
 * a [cmd: record-meta] command to permanently set meta-data
   to a given file
 * a [cmd: verify] command that aborts the current script if a
   condition is not verified
 * a [cmd: define-distribution] command to define distribution of
   parameters in fits

## Improvements of previous commands

  * [cmd: apply-formula], [cmd: eval] and [cmd: stats] can now work on
    several buffers
  * [cmd: browse-stack], [cmd: browse-stack], [cmd: overlay-buffers]
    now accept the `/for-which=` option to further select the buffers
  * [cmd: apply-formula] now better handles mathematical errors (like
    `sqrt(-1)`)
  * [cmd: load] and related commands now take an `/expected=` option
    to abort with an error if the number of loaded datasets is not
    what one expects
  * [cmd: run], [cmd: run-for-each] and [cmd: run-for-datasets] now
    provide several ways to deal with errors in the execution of the
    script: ignore, abort or fail
  * [cmd: cursor] has new symmetry operations, and can work
    effectively with many curves
  * possibility to disable optimization in [cmd: auto-filter-bs]
  * [cmd: show-stack] can also list the meta-data now
  * Gauss-Kronrod integration for distribution of parameters and other
    multidimensional integrators
  * [cmd: help] can now be run without argument to start the new
    documentation system. With a command argument, it will still take
    to the documentation of the command.
  
## Other improvements

  * new syntax for statistics and meta: one can now use
    `$stats.y_max` (etc.) in addition to `$stats["y_max"]` to refer to
    the `y_max` stats (and for all stats and meta too), which means
    that there is no need anymore for cumbersome double quoting like
    in `eval '$stats["y_max"]'`
  * completion on the meta/stats names for the code
  * a `%{ruby code}` expansion in scripts or command-line
  * a `k_mhc` function to compute the "real" Marcus-Hush-Chidsey
    kinetics (using the integral formula)
  * a `--log` command-line option to choose the log file name
  * a `--version` command-line option 
  * Gauss-Kronrod integrators for parameter distributions
  * full support for Qt5 (support for Qt4 is dropped)
  * running a command from the menu now spawns a full dialog box with
    the possibility to set options
  * it is now possible to deduce rate constants from thermodynamic
    constraints in kinetic systems
  * new statistics: `y_a` and `y_b`, which correspond to parameters of
    the linear regression of $$y = f(x)$$. Available for `y2` and all
    the others, still as a function of `x`.
  * a new offline documentation system with index and search
    capacities
  * a series of startup tips
  * now, using the menus to start a command will show a dialog box in
    which one can choose the arguments and options

# Changes in version 2.2 (2018.03.21) {#v2p2}

## New commands

 * a [cmd: load-as-parameters] load function to load saved fit
   parameters as normal datasets
 * [cmd: pop], which can be combined with the various `/accumulate=`
   options to create datasets on the fly, from the results of commands
   like [cmd: stats] or [cmd: 1]

## Fits

 * new fit: [fit: linear-kinetic-system], which is useful for fitting
   the time traces of potential step experiments with linear
   inactivation (like in [Fourmond _el al_, *Nat Chem* 2014](http://dx.doi.org/10.1038/nchem.1892))
 * new time-dependent parameter: `ramps`
 * interpolation of parameters in the "Parameters Spreadsheet"
 * chi-squared "goodness of fit"
 * `qsoas` and `multi` a much more memory-efficient for massive
   multi-buffer fits
 * [fit: arbitrary] has more "automatic" parameters
 * all the `sim-` commands now also take the `/style=` and
   `/set-meta=` options

## Improvements of previous commands

 * new picking modes available for all commands that pick points: the
   local min (Ctrl+M) and max (Ctrl+Shift+M)
 * possibility to track the point selected for commands that pick
   points
 * an `/exclusive=yes` option to [cmd: flag] to remove all the other
   flags
 * most data-producing commands now have an `/accumulate` option to
   generate buffers step-by-step, to combine with [cmd: pop]
 * new [cmd: stats]: `stddev`, and quantiles: `q10`, `q25`, `q75` and
   `q90`
 * [cmd: save-buffers] can now avoid to overwrite files
 * threshold option for [cmd: strip-if] (to avoid creating near-empty
   buffers)
 * [cmd: load-as-csv] now correctly parses CSV files with quotes
 * [cmd: print] can now export SVG files
 * [cmd: bin] can now use a column for weights, and normalize the
   sum to 1.
 * Finally bring back the peak area for [cmd: find-peaks], [cmd: 1]
   and [cmd: 2] !
 * [cmd: expand] can now group the Y columns 2 by 2, (or 3 by 3, etc.)
 * Improvements of [cmd: unwrap], including the possibility to reverse
   its effects

## Other improvements

 * possibility to load a saved stack by just double-clicking on it
 * in kinetic systems, can now use either Butler-Volmer or
   Marcus-Hush-Chidsey kinetics for interfacial electron transfers
 * now fully compatible with Qt 5, still not the default build
 * switched to using embedded [mruby](https://mruby.org) rather than
   plain ruby, which finally fixes a hard crash on Windows
 * new special functions: incomplete gamma functions
 * many bug fixes and other minor improvements

# Changes in version 2.1 (2017.01.02) {#v2p1}

## New commands

 * [cmd: solve], to solve equations
 * [cmd: reparametrize-fit], to manipulate the parameters of a fit

## Fits

 * Reparametrization of the wave shape fits for 1- and 2-electron
   reversible catalysts [fit: ecr-wave] and [fit: eecr-wave]
 * Implementation of the corresponding fits for irreversible
   catalysts, [fit: eci-wave] and [fit: eeci-wave]
 * The commands that define fits, [cmd: reparametrize-fit],
   [cmd: combine-fits], [cmd: define-distribution-fit] and
   [cmd: define-derived-fit] can now redefine existing fits with
   the option `/redefine=true`.
 * The `qsoas` and `multi` fit engines can now use scaling, see the
   "Fit Options" dialog
 * Improvements of the parameters spreadsheet

## Improvements of previous commands

 * [cmd: echem-peaks] now offers all the options of the other
   peak-finding commands, with the same meaning
 * When several datasets are specified, commands that pick points
   [cmd: cursor], [cmd: baseline], etc. can switch between all
   displayed datasets (with the `n` and `N` keys)
 * Commands that write to the output file can now also save the data
   as meta-data through the use of the `/set-meta` option.
 * It is now possible to select the statistics one wants to
   display/save with the [cmd: stats] command
 * [cmd: diff] can now compute an arbitrary derivative to an arbitrary
   order
 * [cmd: print] can now overwrite output PDF file without asking via
   the `/overwrite=true` option
 * most of the commands that can produce several datasets now take a
   `/flag=` option and a `/style=`, the exception being the `sim-`
   commands which still only support the `/flag=` option at this
   stage.


## Other improvements

 * Now compiles and runs with Ruby 2.3 and the most recent GSL
   releases
 * The `--stdout` command-line option writes the content of the
   terminal to the standard output
 * Sketch of an Emacs major mode, `misc/qsoas-mode.el` in the tarball
 * A series of bug fixes


# Changes in version 2.0 (2016.07.19) {#v2p0}

## New commands

 * [cmd: auto-flag], to automatically add flags to all newly
   created datasets
 * [cmd: auto-reglin], another way to compute the derivative of a
   signal
 * [cmd: define-distribution-fit], to define fits with distribution of
   values for parameters
 * [cmd: hide-buffer], to hide buffers from view
 * [cmd: mintegrate-formula], to integrate functions depending on one
   parameter
 * [cmd: reverse], to reverse the order of data points
 * [cmd: split-on-values], to split datasets on the values of certain
   colunms
 * [cmd: system], to run external commands
 * [cmd: timer], that measures the time between two calls
 * [cmd: add] and [cmd: multiply] commands
 * a [cmd: debug] function to save debug information in a directory,
   helpful for debugging (reproducible) crashes

## Fits

 * Load parameters using interpolation on Z values
 * Shortcut to fix/unfix a parameter for all datasets (right-clicking)
 * Spreadsheet mode for editing parameters
 * A "Multi" fit engine that performs very well for large number of
   buffers
 * Can now cancel the current fit using the shell command
   `killall QSoas -SIGUSR1` on Linux and MacOS
 * better convergence for the QSoas and Multi fit engines
 * Generalize the use of "time-dependent parameters" (the
   `/with=co:2,exp` options to [cmd: fit-kinetic-system]) to
   [cmd: fit-ode] and [cmd: fit-arb]
 * New types of time dependent parameters: `rexp` (exponential
   relaxation)  and `steps` (discrete steps)
 * The `sim-` commands can now compute the jacobian and reexport
   parameters (to the output file)
 * Now, the fit dialog detects when there are NaNs in the data, which
   avoid hard-to-understand problems of convergence of fits
 * a new [fit: pseudo-voigt] fit
 * a new [fit: polynomial] fit
 * Now, the commands that define fits can redefine existing (custom)
   fits if given the `/redefine=true` option
 * One can now specify the fit engine from the command-line 

## Improvements of previous commands

 * [cmd: eval] can now use statistics and meta-data of the current buffer
 * Can now push the transform using uppercase T in [cmd: filter-fft], and
   using the `/transform` option in [cmd: auto-filter-fft]
 * [cmd: save-buffers] can now be used to name files (or buffers)
   based on meta-data; it can also simply rename without saving, and
   create directories if necessary (using `/mkpath=true`)
 * [cmd: run] can change to the directory of a script when it is
   running it, using `/cd-to-script=true`
 * [cmd: flag] can now clear all flags before adding new ones
   (with `/set=true`)
 * [cmd: generate-buffers] can now generate several buffers at once
   when using the `/number` option
 * More control in [cmd: split-monotonic]: can now keep only the first
   and/or last parts, and group several segments into datasets
 * In [cmd: apply-formula] and [cmd: strip-if], one can now use `i_0`
   and `x_0` to refer to the index and value of x of the first point
   of the segment
 * [cmd: strip-if] is now aware of the metadata and stats, like
   [cmd: apply-formula]
 

## Other improvements

 * `latest` and `latest:`_n_ specifications to refer to the datasets
   generated by the latest command (or the _n_th before)
 * Faster startup time
 * New special functions: Dawson integral, Debye functions, the
   clausen function, a couple of Fermi-Dirac integrals, multigamma
   functions, some hypergeometric functions, and an approximation of
   Marcus-Hush-Chidsey kinetics
 * One can now use the `--run` and `--exit-after-running` command-line
   options to QSoas to run scripts from the command-line
 * possibility to run "inline" Ruby code from within scripts and from
   QSoas itself
 * Can now run QSoas commands from within Ruby code, for instance
   `QSoas::load("file")`. This is still experimental.
 * Now supports GSL 2.0
 * Quite a few bug fixes
