# Changes in version 2.0

## New commands

 * [cmd: auto-flag], to automatically add flags to all newly
   created datasets
 * [cmd: auto-reglin], another way to compute the derivative of a
   signal
 * [cmd: define-distribution-fit], to define fits with distribution of
   values for parameters
 * [cmd: hide-buffer], to hide buffers from view
 * [cmd: mintegrate-formula], to integrate functions depending on one
   parameter
 * [cmd: reverse], to reverse the order of data points
 * [cmd: split-on-values], to split datasets on the values of certain
   colunms
 * [cmd: system], to run external commands
 * [cmd: timer], that measures the time between two calls
 * [cmd: add] and [cmd: multiply] commands
 * a [cmd: debug] function to save debug information in a directory,
   helpful for debugging (reproducible) crashes

## Fits

 * Load parameters using interpolation on Z values
 * Shortcut to fix/unfix a parameter for all datasets (right-clicking)
 * Spreadsheet mode for editing parameters
 * A "Multi" fit engine that performs very well for large number of
   buffers
 * Can now cancel the current fit using the shell command
   `killall QSoas -SIGUSR1` on Linux and MacOS
 * better convergence for the QSoas and Multi fit engines
 * Generalize the use of "time-dependent parameters" (the
   `/with=co:2,exp` options to [cmd: fit-kinetic-system]) to
   [cmd: fit-ode] and [cmd: fit-arb]
 * New types of time dependent parameters: `rexp` (exponential
   relaxation)  and `steps` (discrete steps)
 * The `sim-` commands can now compute the jacobian and reexport
   parameters (to the output file)
 * Now, the fit dialog detects when there are NaNs in the data, which
   avoid hard-to-understand problems of convergence of fits
 * a new [fit: pseudo-voigt] fit
 * a new [fit: polynomial] fit
 * Now, the commands that define fits can redefine existing (custom)
   fits if given the `/redefine=true` option
 * One can now specify the fit engine from the command-line 

## Improvements of previous commands

 * [cmd: eval] can now use statistics and meta-data of the current buffer
 * Can now push the transform using uppercase T in [cmd: filter-fft], and
   using the `/transform` option in [cmd: auto-filter-fft]
 * [cmd: save-buffers] can now be used to name files (or buffers)
   based on meta-data; it can also simply rename without saving, and
   create directories if necessary (using `/mkpath=true`)
 * [cmd: run] can change to the directory of a script when it is
   running it, using `/cd-to-script=true`
 * [cmd: flag] can now clear all flags before adding new ones
   (with `/set=true`)
 * [cmd: generate-buffers] can now generate several buffers at once
   when using the `/number` option
 * More control in [cmd: split-monotonic]: can now keep only the first
   and/or last parts, and group several segments into datasets
 * In [cmd: apply-formula] and [cmd: strip-if], one can now use `i_0`
   and `x_0` to refer to the index and value of x of the first point
   of the segment
 * [cmd: strip-if] is now aware of the metadata and stats, like
   [cmd: apply-formula]
 

## Other improvements

 * `latest` and `latest:`_n_ specifications to refer to the datasets
   generated by the latest command (or the _n_th before)
 * Faster startup time
 * New special functions: Dawson integral, Debye functions, the
   clausen function, a couple of Fermi-Dirac integrals, multigamma
   functions, some hypergeometric functions, and an approximation of
   Marcus-Hush-Chidsey kinetics
 * One can now use the `--run` and `--exit-after-running` command-line
   options to QSoas to run scripts from the command-line
 * possibility to run "inline" Ruby code from within scripts and from
   QSoas itself
 * Can now run QSoas commands from within Ruby code, for instance
   `QSoas::load("file")`. This is still experimental.
 * Now supports GSL 2.0
 * Quite a few bug fixes
