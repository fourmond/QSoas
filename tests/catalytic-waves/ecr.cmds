generate-buffer -0.8 -0.2
sim-ecr-wave /model=nernst parameters/ecr-1.params 0
apply-formula 'f=F/(R*298); y-= 5/(1 + exp(f*(-x-0.5)))-1'
assert '$stats["y_norm"]' 1e-14

# Check that slow ET tends to nernst when the electron transfer is fast
sim-ecr-wave /model=nernst parameters/ecr-1.params 0
sim-ecr-wave /model=slow-et parameters/ecr-1.params 0 /override='kox/k0or=1e-9'
S 1 0
assert '$stats["y_norm"]' 1e-7

# Check that the formula is correct
sim-ecr-wave /model=slow-et parameters/ecr-1.params 0 /override='kox/k0or=5'
apply-formula 'f=F/(R*298); eor = exp(f*(x+0.5)); krko = 0.25;kok0=5; a= 1+eor**-1;ap = krko * eor**-1;b=eor**-0.5*(1+krko);ilim=4; y-= ilim*(1 - ap)/(a + kok0*b)'
assert '$stats["y_norm"]' 3e-15 /platform-precision=true


# Check the equivalence of the two directions
generate-buffer -0.8 -0.2
sim-ecr-wave parameters/ecr-2.params 0
# Both k-2/k2 and k2/k0or must change
sim-ecr-wave parameters/ecr-2.params 0 /reduction=true /override='kox/kred=4;ilim/betad0=-1;kred/k0or=0.025'
S 1 0
assert '$stats["y_norm"]' 1e-13


# Check that the reversible wave tends to the reversible one
sim-ecr-wave parameters/ecr-2.params 0 /override='kred/kox=1e-10'
sim-eci-wave parameters/ecr-2.params 0
S 1 0
assert '$stats["y_norm"]' 1e-7

sim-ecr-wave parameters/ecr-2.params 0 /override='kox/kred=1e-10;ilim/betad0=-1' /reduction=true
sim-eci-wave parameters/ecr-2.params 0 /override='ilim/betad0=-1' /reduction=true
S 1 0
assert '$stats["y_norm"]' 1e-7
